// Code generated by ctxboot; DO NOT EDIT.

package main

import (
	"github.com/iondodon/ctxboot"
	"reflect"
	"log"
	
	controller9 "github.com/iondodon/go-vbs/controller"
	
	repository "github.com/iondodon/go-vbs/repository"
	
	booking2 "github.com/iondodon/go-vbs/repository/booking"
	
	bookingdate2 "github.com/iondodon/go-vbs/repository/bookingdate"
	
	customer2 "github.com/iondodon/go-vbs/repository/customer"
	
	vehicle2 "github.com/iondodon/go-vbs/repository/vehicle"
	
	booking6 "github.com/iondodon/go-vbs/usecase/booking"
	
	bookingdate3 "github.com/iondodon/go-vbs/usecase/bookingdate"
	
	vehicle4 "github.com/iondodon/go-vbs/usecase/vehicle"
	
)

func init() {
	cc := ctxboot.Boot()
	
	// Register components in dependency order
	
	// Register controller9.BookingController
	if err := cc.SetComponent(reflect.TypeOf((*controller9.BookingController)(nil)), &controller9.BookingController{}); err != nil {
		log.Fatalf("Failed to register component %s: %v", "controller9.BookingController", err)
	}
	
	// Register controller9.TokenController
	if err := cc.SetComponent(reflect.TypeOf((*controller9.TokenController)(nil)), &controller9.TokenController{}); err != nil {
		log.Fatalf("Failed to register component %s: %v", "controller9.TokenController", err)
	}
	
	// Register controller9.VehicleController
	if err := cc.SetComponent(reflect.TypeOf((*controller9.VehicleController)(nil)), &controller9.VehicleController{}); err != nil {
		log.Fatalf("Failed to register component %s: %v", "controller9.VehicleController", err)
	}
	
	// Register booking2.BookingRepository
	if err := cc.SetComponent(reflect.TypeOf((*booking2.BookingRepository)(nil)), &booking2.BookingRepository{}); err != nil {
		log.Fatalf("Failed to register component %s: %v", "booking2.BookingRepository", err)
	}
	
	// Register bookingdate2.BookingDateRepository
	if err := cc.SetComponent(reflect.TypeOf((*bookingdate2.BookingDateRepository)(nil)), &bookingdate2.BookingDateRepository{}); err != nil {
		log.Fatalf("Failed to register component %s: %v", "bookingdate2.BookingDateRepository", err)
	}
	
	// Register customer2.CustomerRepository
	if err := cc.SetComponent(reflect.TypeOf((*customer2.CustomerRepository)(nil)), &customer2.CustomerRepository{}); err != nil {
		log.Fatalf("Failed to register component %s: %v", "customer2.CustomerRepository", err)
	}
	
	// Register repository.Queries
	if err := cc.SetComponent(reflect.TypeOf((*repository.Queries)(nil)), &repository.Queries{}); err != nil {
		log.Fatalf("Failed to register component %s: %v", "repository.Queries", err)
	}
	
	// Register vehicle2.VehicleRepository
	if err := cc.SetComponent(reflect.TypeOf((*vehicle2.VehicleRepository)(nil)), &vehicle2.VehicleRepository{}); err != nil {
		log.Fatalf("Failed to register component %s: %v", "vehicle2.VehicleRepository", err)
	}
	
	// Register booking6.BookVehicle
	if err := cc.SetComponent(reflect.TypeOf((*booking6.BookVehicle)(nil)), &booking6.BookVehicle{}); err != nil {
		log.Fatalf("Failed to register component %s: %v", "booking6.BookVehicle", err)
	}
	
	// Register booking6.GetAllBookings
	if err := cc.SetComponent(reflect.TypeOf((*booking6.GetAllBookings)(nil)), &booking6.GetAllBookings{}); err != nil {
		log.Fatalf("Failed to register component %s: %v", "booking6.GetAllBookings", err)
	}
	
	// Register bookingdate3.GetBookingDates
	if err := cc.SetComponent(reflect.TypeOf((*bookingdate3.GetBookingDates)(nil)), &bookingdate3.GetBookingDates{}); err != nil {
		log.Fatalf("Failed to register component %s: %v", "bookingdate3.GetBookingDates", err)
	}
	
	// Register vehicle4.GetVehicle
	if err := cc.SetComponent(reflect.TypeOf((*vehicle4.GetVehicle)(nil)), &vehicle4.GetVehicle{}); err != nil {
		log.Fatalf("Failed to register component %s: %v", "vehicle4.GetVehicle", err)
	}
	
	// Register vehicle4.IsAvailableForHire
	if err := cc.SetComponent(reflect.TypeOf((*vehicle4.IsAvailableForHire)(nil)), &vehicle4.IsAvailableForHire{}); err != nil {
		log.Fatalf("Failed to register component %s: %v", "vehicle4.IsAvailableForHire", err)
	}
	
}
