// Code generated by gobok v1.0.0. DO NOT EDIT.

package booking

import (
	bookingRepo "github.com/iondodon/go-vbs/repository/booking"
	bookingRepos "github.com/iondodon/go-vbs/repository/booking"
	custRepo "github.com/iondodon/go-vbs/repository/customer"
	vehRepo "github.com/iondodon/go-vbs/repository/vehicle"
	bdUCs "github.com/iondodon/go-vbs/usecase/bookingdate"
	vehUCs "github.com/iondodon/go-vbs/usecase/vehicle"
	"log"
)

type BookVehicleBuilder struct {
	instance *BookVehicle
}

func NewBookVehicleBuilder() *BookVehicleBuilder {
	return &BookVehicleBuilder{
		instance: &BookVehicle{},
	}
}

func (b *BookVehicleBuilder) InfoLog(v *log.Logger) *BookVehicleBuilder {
	b.instance.infoLog = v
	return b
}
func (b *BookVehicleBuilder) ErrorLog(v *log.Logger) *BookVehicleBuilder {
	b.instance.errorLog = v
	return b
}
func (b *BookVehicleBuilder) VehRepo(v vehRepo.VehicleRepository) *BookVehicleBuilder {
	b.instance.vehRepo = v
	return b
}
func (b *BookVehicleBuilder) CustRepo(v custRepo.CustomerRepository) *BookVehicleBuilder {
	b.instance.custRepo = v
	return b
}
func (b *BookVehicleBuilder) BookingRepo(v bookingRepo.BookingRepository) *BookVehicleBuilder {
	b.instance.bookingRepo = v
	return b
}
func (b *BookVehicleBuilder) IsAvailableForHire(v vehUCs.IsAvailableForHire) *BookVehicleBuilder {
	b.instance.isAvailableForHire = v
	return b
}
func (b *BookVehicleBuilder) GetBookingDates(v bdUCs.GetBookingDates) *BookVehicleBuilder {
	b.instance.getBookingDates = v
	return b
}

func (b *BookVehicleBuilder) Build() *BookVehicle {
	return b.instance
}

type GetAllBookingsBuilder struct {
	instance *GetAllBookings
}

func NewGetAllBookingsBuilder() *GetAllBookingsBuilder {
	return &GetAllBookingsBuilder{
		instance: &GetAllBookings{},
	}
}

func (b *GetAllBookingsBuilder) BookingRepo(v bookingRepos.BookingRepository) *GetAllBookingsBuilder {
	b.instance.bookingRepo = v
	return b
}

func (b *GetAllBookingsBuilder) Build() *GetAllBookings {
	return b.instance
}
