// Code generated by gobok v1.0.0. DO NOT EDIT.

package vehicle

import (
	vehRepo "github.com/iondodon/go-vbs/repository/vehicle"
	vehRepoPkg "github.com/iondodon/go-vbs/repository/vehicle"
)

type GetVehicleBuilder struct {
	instance *GetVehicle
}

func NewGetVehicleBuilder() *GetVehicleBuilder {
	return &GetVehicleBuilder{
		instance: &GetVehicle{},
	}
}

func (b *GetVehicleBuilder) VehicleRepository(v vehRepo.VehicleRepository) *GetVehicleBuilder {
	b.instance.vehicleRepository = v
	return b
}

func (b *GetVehicleBuilder) Build() *GetVehicle {
	return b.instance
}

type IsAvailableForHireBuilder struct {
	instance *IsAvailableForHire
}

func NewIsAvailableForHireBuilder() *IsAvailableForHireBuilder {
	return &IsAvailableForHireBuilder{
		instance: &IsAvailableForHire{},
	}
}

func (b *IsAvailableForHireBuilder) VehRepo(v vehRepoPkg.VehicleRepository) *IsAvailableForHireBuilder {
	b.instance.vehRepo = v
	return b
}

func (b *IsAvailableForHireBuilder) Build() *IsAvailableForHire {
	return b.instance
}
